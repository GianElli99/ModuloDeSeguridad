<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACKGgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAGlFJ
        REFUeNrtnXmQHFdhh78+ZnZnZi9pJRmMsXGMSWEO2wHbAUwIYANJKGIIlWAIVEgIBCiOUJgjIUlBmYQQ
        jqSoMkcgEO6iwFzGNhhTEGwDNgmWr+KI8SWsIFmrPWZ25+julz9ejzRazUo7Oz0zPd2/r2rKKq01O/Pe
        +339rn7tIDLHqZetdPtrB9gFnAU8HXgy8Ij4Zz8Hvg9cC9wM7APM+je461XTKtyM4agIMh36IvBg4HHA
        k+LX6cC2LnVvgIPAL4Dr49d/A3uBpmQgAYj0Bx5gGngY8ATsVf5c4KFAqcdfsQbcB9yI7R38ALgb6PqL
        JQQJQIwm9A6wAzgDe4V/MnAmsBPwE/rVAbAf2B3L4HrgDuABNFSQAMTQQ9/ZtT8/Dv4jgLkhfaxF7LzB
        9cB1aKggAYiBBh6O7NqfD5zH1rr2SdMeKvwoloGGChKASCD067v252Nn8JPs2idNe6hwcywDDRUkANFD
        6EfdtU+aRTRUkADEWHbtk0ZDBQlAoY/LfB54FOPTtU+abkOF24EDaKggAWQw9N269u0NOeLIDUgaKkgA
        Yx94yE/XPmk0VJAAxjL06tonj4YKEkCqQ6+u/XDRUEECGGngQV37tKChggQwlNCra59+NFSQABINvbr2
        442GChJAT4EHde2zioYKeRdAD137M7Gn5qhrn00C7GlHu9FQIdsCUNdebILcDxUyIwB17UWf5HKoMNYC
        OE7X/ow48Orai15ZP1S4Dntbc+aGCmMnAHXtxQjI7FAh9QJQ116kjEwNFVIpAHXtxZgw9kOF1AhAXXuR
        AcZuqDAyARyjaz8FnIq69mK86TZUuAuodvufRyWEoQpAXXuRU1I7VBi4ANS1F+IoUjNUSFwAPXbtTwLK
        ag8ix6wCexjRUCERAahrL0QiDH2o0LcA1oXfBx6CuvZCJEG3ocKvYlEkIoG+BNARfgf7FNqXABegrr0Q
        SdMeKnwb+CT2qc2mXwlsWQDrwv8C4F3AyaonIQbOvcBbgM/3KwE3gQ9zrsIvxFA5Oc7cuf2+Ub8C8IEX
        K/xCjEQCL6bPCfV+BTCDnfATQgyfx8UZHJkAJrHLekKI4bMrzuDIBOCgNX0hRoVPnyt5SUwCGtWDECOh
        7+y5WSgFIYQEIISQAIQQEoAQQgIQQkgAQggJQAghAQghJAAhJAAhhAQghJAAhBASgBBCAhBCSABCCAlA
        CCEBCCEkACGEBCCEkACEEBKAEEICEEJIAEKIdKOHeuQFY+wLMJijT5R3wGk/Y8Jx7EtIAGLMch5FEEWY
        MMAE7VcIUYiJDJgIjDn8ZwDHxXHj0Lf/7Ho4vofj+/bl+eC6OK46jRKASFXgTdDCNJpEzQam2cKEgZVA
        +6pvzHGv6Ec9Yqb9bxwHx3Fs+D0fp1jALU7gTBRx/IKEIAGIoYc+CIjqdRv4RsNe5cMwjnGXoG+lO9/+
        N8ZYkUQRJgigsUaIg+PFvYOJCdziBO7kJI6v5iQBiMGEPgwxjQbh2hpRfc2G0UTrAj+Mcbtz+POEITTq
        hI6L4/u4kyW8UglnYgLH81RpEoDoO/jNJuFqjWhtjajVgigacuA3IQRjMK0WYatFWKviFgq4pRJeuYJT
        LKoSJQDRW+oNUbNJVKsSrq7aq/24EEVEjQZRo0FYreKVy7iVKdxiUSsLEoA4bvAbDcJalWh1NR7Xj/HX
        CQKC5WWcWg23XMarTOFOTEgEEoA4KiytFsHKMlGtNvbBP+q7hSHhygrR6ipupYI/PYNTKKjSJQBhooio
        ViNYXsa0mtn+rmFIuLxMtFbHn5nBrVS0jCgB5JeoXidYXiJaWzu0Sy8PmFaT1sIB3LVV/JlZ3MlJNQYJ
        IE/JjwhWVgiXlzLX3d+8BQzR6iqtRgNvZhZ/ehrUG5AAMt/uWy2CpUXCWi1XV/0NyyMMCRYPYlpN/Nk5
        zQ1IANklWlsjOHiQqNlQYRxhAUNYrWKaLfxt23BLJZXJkFCfa1gNfHmZ1gP7Ff5jEDUbtB7YT7i8rN7R
        kFAPYOCtOiJYXiJYWlKj3gQmDGkdXMBEIf7MrOYFJIAxbsxRRLB4kHBlReHvqeAMwdISJorw57ZpqVAC
        GMM2HAYEBw8SVqsqjC1KIFxehijC37bNnkcgEkdqHUj4Q4KFBYU/AcJqlWBhIb/LpRLAmIU/iuyVv1ZT
        YSQlgVqN4OBBe9qRkADSm35DuLhIWNOVP3kJVAkXFzWXIgGkN/zB0hLBipawBla+K8taTZEA0klYrapx
        DkMCS0uaW5EA0kVUrxMsLR4+ZVcMUAIRwdIiUb2uspAAUtAeg8DuZR+nU3tU5kICSKIl2i6prkbDx/a6
        NOSSAEZIWK0SVldUECMr/xXNB0gAo8E0mwTLugKNthIMwfISppntk5QkgDQ2vJVlTKulshh1VcRnKUrE
        EsDQiNbWtNMvRYQ1+9wEIQEMHBOGtuuvbanpIb7lWvcLSAADJ6xWNeufAAaIjH0l0XuP6nVNCG4B3WPZ
        S6MNAjWyBIKPgXLRZabk4gDVRsRKIwLT3zNDwmoVr1LRQ0olgMEQ1mqZP7t/kEQGykWHZzxymmc/eprT
        d03gOnDPQourbl/hiluXWa5HW5aAaTUJazX82VkVtgSQLCYIdJdfn+HfNe3zuqfO8/yzZ5me9Oxjx4HT
        dk7whFPLnHNKiUuv3seBarhlCYQ19QJ6QXMAm21Yq6tab+4z/G971i5efN42KhMuYWQOzQGEkWGi4PDc
        s2Z5yXnb8Pt4srh9mvKqCl0CSA4ThkS6+vcd/ovOnMGl+6SfMeC78PyzZzlprkDUx8RgVKtqRUACSLAR
        1+tEuvr3H34nngTcAGNgvuJx+q6JQ8ODLf3eZlMrNRJAQhhDtLaqnWYDDn8b33WYmuizWarOJIDE8h8E
        upoMKfw4sNaK2LPYwulnPRDba9PtwhJA/425vqaGNIzwA64Dt91f5879TZw+P4cVt7YHSwB9teZIM8pD
        DP++lZAPX7fAgVqI4/T/ecLVVW3ZlgD6aNBBoKW/IYV/cS3iX7/zANfdWcN1kvlMptkkUu9NAtgaDqbZ
        0Fn0Qwr/e67Zz2dvWiRIsLhNFGGaDcBJY7FJAOnGEDWamkkeUvg/c9MirdAkG1UT1yGqQwmg17YThvHV
        Qwwt/AO4UJtmQ5uCJIAtNJwg0Oz/mIdf9SgBbA3HwTSbunKMefih3ZNrMtBfIgFkDGPseX8a/491+FWX
        EsDWG00Q6Kox7uEH25sLAglAAugl/wYTatw49uFv12cY9HVzkQSQu9YeafyfkfBbAYTaESgB9NBggkAN
        JiPht18i0krABujcpA0EMMguozEQHXp/BzC4jpO6KYdMhJ94SCcBSACbwnHsY74HJIB2qM59WImH75jA
        c+GuA01uvGeNPQdbie2DV/iPMICtU8fRZKAEsIn2Eg2ukTzptDKvecoOHndKiXLBXvXrLcPte+t88L8W
        uOanVYLIjHT3eqbCP4Q6HWc0B9C1tZjErxSRgcecOMk7n/Mgfuf0CiXfiQ/EhKLn8LiTS7zrogdx8eNn
        8V1nZLvXsxj+QdRnVlAPoGtjSXYC0GAfhPHy87dz+s4i4bqrkcGKYL7i8aYLdwLwuR8vDb0nkMnwHyrk
        SBLoVm8qgm4OMAm/HzxoxuecU8rHDeC2spXAxY+fG2pPINPhH0CdSgDZTT9EyQvgIbMFpibc44ZqFBLI
        evgPfUlJQAI4Lo6T+BZgx4HlekiwSbFYCbhDkUAuwj+gepUAMuuAhAUA3L/UYs/i5pf5OiXwwgFJIDfh
        H0CdSgCZLpXkewAHaiGfvWmR1ebmg9KWwCUDkECewj+IOpUAskq7q5hwizYGvnrLMl/evUQUbf6Uuq4S
        6NMCuQv/gOpUAsisA9wBvCes1CPe/a39XH7zEpHpQwLe1iWQu/APsE4lgMyWymCuFq4D+6sh77x635Yl
        8KZn7OSF52xNAnkNP46jIYAEsEmMwfG8gXUX+5XAXCmeGOxRArkNfywAx/O0DCgBbLK9eP5AZ42TlEBh
        ExLIdfixKwCOp02vEsBm8TxwB1s0R0hg9+AkkPfw2y/i2joVEsBmcBwHxx/8FeOQBK7aZ1cHtiCBS44h
        AYU/rk/f1z4ACaCXUnGtAIYwZmxL4NKEJaDwxxhj69JVU5cAesDxC0NbN05aAmFkFP5DFenYuhRd0czI
        RkEoFu1VY0hnA3ZKAOC5Z85uOridEjDAtT+t8qYLdyr8AK5r61JIAL3gFAo4njfUpwMnIYE3XrCD5589
        y2NOnFT4AcfzcArqAUgAW2g4brFI2GoN9fd2TgxuRQLbyh7by569+zXn4Qfbk3O0ArBx+agINjKAgzMx
        MZpKcWDfFlcHej3OIMvhB2wdagVAAthS4RQncEY0e3xIAlfv71kCCn8cftfFLU5k5wtJAENuQIXCSMeP
        rgP7VoJYAsuJSiDr4U9D/UkA496APA+3VBptBR2SwL7EJJCH8AO4pZLG/xJAAo1oxJtIkpRAXsLvuO7I
        5S0BZKGACsWRTQYmLYG8hB/s5J9b0Pq/BNB3Cbl4pXI6PkofEshT+AFbZ9r+KwEkUkil0lBuDupVAl/Z
        pATyFn7H99X9lwASbFCFAl65kp5KiyVwaacEHIW/jVeuaPZfAki4UU1NpepQiU4JfPEnSzQDg9c++xL7
        X8+1/8+7v7UvN+F3PB9vakoNdpNoK/BmG1axgFspEy4vp04Cb//Gr7n1/jovPGeOE2d9fNdhrWW4/f46
        H75ugRt+WSM0+dgQ51bKOEVd/SWA5BWAV5kiqtUwYZgqCSzXI/7zhwe56vYVTtleZFvZZc9iwH0Hmyyt
        RfaM0zzUkOfhVabIx7eVAIYftmIRt1wmXFlJV8OP2/uvlwP2Lgf2EAzHwSFfh+G65bJu/e21zFQEvSXN
        n55J7QETjgOeA57rDOpk8/RWjV/An57RjT8SwIAbWrGINz2tgkgZ3vQ0jq7+IxFA7pTrTU3hTmqdOTWN
        eLKU15n/vrOXhABy97QFx/PwZ2dGfo+AsHv+/dmZvN7003f2+m3BIdDIY8m7kyVcrTePvh7y3RtrxBkc
        qQBWc1n0joM/M4s7OakUjir8k5P4M7N5nvhbTYMA1vJa+o7v489tS819Air73LEmAYwYd3ISf3ZOy09D
        Tb+DPzun3lcKBNAEFvJeC97UFN6UlgaHV97T2u9vWYgzODIBrAG/yn01OA7+3BxuOR3nBmQZt1zGn5tT
        j8vyK/rsgSexjrVH9WCXBgvbt6tbOsjwT05S2L5d5/wlmL2kBFBXXdjtqIXt87gpOEIsc+GfmKCwfV7P
        +TtMfaQCuOtVh8a895DXpcBuEigW8bfP60CKJMu0ULBlqq2+nazG2evM4vAE0MHdwF7VR0ehTkxQmN+h
        BptE+ItFCvM71Ks6mr1x9vprqwl8kIPAbaqPdQU7OamG228ZxiLVvEpXbouzN3IB1IFbVR8bNOAdO3RA
        5VbKrlSyZSeBbsStJDD3ltTdLLuBmurkaJyC7cKm6VDRtOOVK3YIpXP9N6IWZ65v+hJAx+TDbuBe1csG
        EvB9/Pl5u2NQdxAeozW6+LNz+PPz2l59bO5tC6CfCcC+BdDBXuB61csxJOB5+HNzFOa1QtC1fAoFCvPz
        +HNzWuc/PteT0MR7UgIIgO+S01uDN9/K7cGihZ27tGuwsxGWyxR27rIHemqH3/FoxFkL0iQAgB+iXYGb
        K/R4aSvvd7O17+grzO/QYZ6bZ0+ctWTaYr9v0DEGuRf4nupnk42/PSTYuQuvUsnZCZ4OXqVCYecudfl7
        53tx1voe/ycigA5awFeAquqohwqI17rtVTD7S15useP7aomvV6pxxlpJvWHS/c8bgJuB81VXvaTCjQ8a
        nSSsVQlrNUyzmamv6BSLeJUKXmVKM/xb5+Y4Y8k1vSTepKMrcgD4Kjk8KDSRkPg+/uwcxV0n4G/fHm8l
        HuehgRPfG7HdfqfZOYV/65g4WwfWZa4vBlEbVwCvAB6uOutDBDOzeJUK0eoqYa1G1GxCFI3HF3Bd3PiK
        75bLqXqo6hhzZ5ytZKsqqTfqMNLPgS+pvhIQgefjTc9Q2HUCxZ278Gdmba8gjROGTny1n5mluHMXhV0n
        4E3PKPzJ8aU4W4ld/WEwPYAI+CzwJ8DDVG8JZMt1cUol3FIJLwyI6g2itTWiRgMTBqPrGbgujufjTkzg
        lkq4kxMK/GC4O85U4hU9qNq6DbgceIPqLmEZeD5exccrlzFRhGm1rAiaDaJm0z652JjDr357C+33iF+O
        5+EWizjFCdyJCZxCwT4gRRt4BsnlDOiO28Rr7dTLDj059yzsksUpqr8hYAwmDDFBcPSrs5dgjJ2hNevm
        aeOnCR8Kcnx1d/wuL89T4IfHPcBF2BWARLv/MNjHg98CfBJ4G3pg++BxnEMBxXGO6AUYY6wAjMGYCKKO
        vwec9hXedXCc+Gruuof/vv0yWtwZMibO0C0DazaDeNOOXsBvYLsvZ6ouheiZ3cDzgF9C8ld/GNDjwTs+
        6C+Bj5DgziUhckIrzs7Awj8wAazjC+geASF65XtxdgbKwATQYawHgPfE/xVCHJ8jMjOoq/9ABbCOa4H/
        QFuEhTgeJs7KtcP4ZQMVQIe5AuAy4CbVrxDH5KY4K8G6DI2fANZxD/DPwKLqWIiuLMYZuWdYv3DgAlhn
        sK9j7RYihOgkjLPx9Q2yM54CWPdFWsD7O7+kEALiTLw/zshQwg9D3qHXsUHoscBngEer3oXgNuBFxDv+
        hhV+GO4cQCe3AP8ALKjuRc5ZiLNwyyh++VAFsM5sXwP+jYSONxZiDAniDHxtg4xkSwDrvmAAfAB7r4AQ
        eeTyOANDWfLrxsju0uuYDzgD+DRwttqDyBE/Af4UuGNU4YfRzQF0cgfwdyT0qCMhxoC9cZu/Y9QfZGQC
        WGe8K4G/QZOCIvssxG39yg2ykA8BrPviBvgU8A70YBGRXapxG/9U3OZHGv6RC2BdAYTAh4B/AepqKyJj
        1OO2/aG4rY88/KkQwLqCaADvpeNmCCEyQPtmuPfGbTwV4YeUndXXsTIwh70f+s/T9hmF6JH27b1vJL4R
        Li3hh5T0ALqwCPwt8EW1HzHmfDFuy4tp/HCpu7p29ALAPljkQ8Az1Y7EGPJN4K+wD/YA0nX1hxT2ANYV
        0N3A64Br1JbEmHFN3HZTG/5UCqBLQf0MeCUDeDCiEAPiirjN/izN4U+tALoU2J3Aq7HjKZ0rKNKKidvo
        q+M2m+rwp1oAXQruXuC12HMExuQ52SJHRHHbfG3cVlMf/tQLoEsB7sU+cPRjaJ+ASA9B3CbfQMc9LWkP
        /1gIoEtB7gfejN1Y0VTbEyOmGbfFN8dtc2zCD2O2yWbdEuE0dn31dcCk2qEYAXXsgR7vBFbGLfxjJ4Au
        Eihju12XADNqj2KILGP39r8PWB3H8I+lALpIoIA9WOEdwElql2II7MGe4/dpOoah4xb+sRXABiJ4Bvah
        CmepfYoBshs73v/mOAc/EwLoIoHHxhJ4ltqpGADfjMO/OwvhhzFZBTgW6yrgFuBl2CUZrRCIpGhh7+h7
        WZbCDxm61XZdT2AGeD12gnBW7Vf0wTL2iT3vi/+cmfBnSgBdJFDAPm3lHcBD1Y7FFsjMZF8uBLCBCC4A
        LgXOU3sWPXAT8DbgW1kMfqYF0EUCp2E3DV2MNg2JY9MAPo/d3POLLIc/0wLoIoEp7CTOJcCJaueiC/dj
        j6L7KGO6s08COLYEHOBp2HmBJ6q9iw5+APw9cC0dt5xnOfy5EMAGIjgVeCt2B2FJbT/XrGFv4/1H4K68
        BD93AugigQrwZ9iNHVolyCf3Ae8GPg7U8hb+3AmgiwQAfhd4O/DkPJZHTjHA97FLfN/t/EGewp9LAWwg
        gpOA1wB/AcwrH5nmAHan6Aew6/y5DH7uBdBFAj72+PG3YicI1RvIFga4Afgn7J7+IO/hz70AukgA7HxA
        uzewXbnJBAscvurf1/mDPIdfAthYBAUO9waeoHIaWwx2ea991W8p+BLAZiUA6g2MM7rqSwCJiKCAPV/g
        Lag3MA60r/rvAq5GV30JIAEJgF0p+EvsE4t19Fg62YO9b//f6ZjhV/glgKRE4GLvKnw98GzsoaRi9KwC
        38Det/8jOh4co+BLAIMQwRTwXOyR5L+lchwp/4M9mvtyoKrgSwDDkgDYx5e/HLul+MEqoaHyf8AngI/Q
        sYdf4ZcAhi0CD7tx6K+B30PnDQyaOnZy7/3A9UCo4EsAaRDBDPBHwKuww4KxP3A1ZUTAT4APYp/Au9T5
        Q4VfAkiDBMDuHXgR8FLgESqhRPgF9o69z9Dx5F0FXwJIswgeiV0yvBh4iEpoS9yPPZ7rY8AdCr4EMG4i
        8IDHA68ALgK2qYQ2xUHgq8CHsYdzapwvAYytBMBODD4FeCVwIdo/sBGr2CO5LsPep1/v/KHCLwGMuwhm
        gN/H7ih8IloxaFPHbt/9KHAFHQ/gUPAlgCyKYDt2yfClsQjyei5hO/gfB67EHtah4EsAuRLBs2IRPClH
        IqhjD+f4OHCVgi8B5F0E2zpEcH6GRbAWB/8T2Cv+goIvAUgER4rgmRzuEVQy8lVXOdzVv0rBlwDEsUUw
        BzwVu4fgaYzvQaUL2Nn8zwHfUfAlANGbCMrYfQQvAP4AOHlMvsoebBf/88CNdJy5r+BLAKJ3EfjAGdh7
        DZ6H3WXopexjh8DPgC9j9+rfTsdpPAq+BCD6FwHYW5CfDfwx9qajUc8TrAI3A18AvgbcTcez9RR8CUAM
        Rgbz2InCPwSejr0JaVh3IBpsN/872C273wceUOglADF8ERSA07Ebi54DnA0MKn1VYDf2Sn8VtsvfVPAl
        ADF6EYDdWPTb2F7BBcAp9D9XEGKP1b4We7W/gXUbdxR8CUCkSwY+cBr2wacXxlJ4MJsfIkTYI7duBL6N
        7er/L5rUkwDEWIkA7K7CtgwuAM4BTuDonkEI7Ad+HIf+u9iDOFbXv6GCLwGI8ZTBFPAo7B2JFwC/GbeB
        n2O7+FcCt7HubjyFPrv8P3WvfUnW4UMqAAAAAElFTkSuQmCC
</value>
  </data>
</root>